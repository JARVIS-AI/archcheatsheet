(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{32:function(e,t,a){"use strict";a.r(t);var s=a(2),n=Object(s.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"laptop-specific"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#laptop-specific","aria-hidden":"true"}},[e._v("#")]),e._v(" Laptop specific")]),e._v(" "),a("p",[a("a",{attrs:{id:"laptop-specific"}})]),e._v(" "),a("h2",{attrs:{id:"hibernation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hibernation","aria-hidden":"true"}},[e._v("#")]),e._v(" Hibernation")]),e._v(" "),a("p",[a("a",{attrs:{id:"hibernation"}}),e._v("\nNative hibernation through systemd require two simple steps:")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("Add "),a("code",[e._v("resume=/dev/sdxY")]),e._v(" to the kernel, where "),a("code",[e._v("x")]),e._v(" is your device and "),a("code",[e._v("Y")]),e._v(" is your SWAP partition.")])]),e._v(" "),a("li",[a("strong",[e._v("Add the "),a("code",[e._v("resume")]),e._v(" hook to your "),a("code",[e._v("etc/mkinitcpio.conf")]),e._v(" file and regenerate the initramfs afterwards.")]),e._v("\nIn case of making "),a("a",{attrs:{href:"https://wiki.archlinux.org/index.php/Dm-crypt/Swap_encryption",target:"_blank",rel:"noopener noreferrer"}},[e._v("encryption"),a("OutboundLink")],1),e._v(", "),a("code",[e._v("keyboard")]),e._v(" should be placed before "),a("code",[e._v("encrypt")]),e._v(", because you will not able to decrypt without keyboard.")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# find HOOKS in mkinitcpio.conf and it should look similar:\nHOOKS=(base udev autodetect mdconf block filesystem  resume  keyboard fsck) #You should put 'resume' after udev\n")])])]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("To regenerate the initramfs, run this in the terminal:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mkinitcpio -p linux\n")])])])]),e._v(" "),a("p",[e._v("Also modify "),a("code",[e._v("/etc/systemd/logind.conf")]),e._v(" and change "),a("code",[e._v("HandleLidSwitch")]),e._v(" option:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[Login]\nHandleLidSwitch=hybrid-sleep\n")])])]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("It could be useful to check "),a("a",{attrs:{href:"https://wiki.archlinux.org/index.php/Power_management/Suspend_and_hibernate",target:"_blank",rel:"noopener noreferrer"}},[e._v("suspend and hibernate"),a("OutboundLink")],1),e._v(" wiki article.")])]),e._v(" "),a("h2",{attrs:{id:"nvidia-hybrid-graphics"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nvidia-hybrid-graphics","aria-hidden":"true"}},[e._v("#")]),e._v(" Nvidia hybrid graphics")]),e._v(" "),a("p",[a("a",{attrs:{id:"nvidia-hybrid-graphics"}})]),e._v(" "),a("div",{staticClass:"danger custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("This part may cause hangs or another graphical problems, check twice!")])]),e._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("For laptops with hybrid Intel/NVIDIA graphics, you should read "),a("a",{attrs:{href:"https://wiki.archlinux.org/index.php/bumblebee#Installing_Bumblebee_with_Intel.2FNVIDIA",target:"_blank",rel:"noopener noreferrer"}},[e._v("bumblebee"),a("OutboundLink")],1),e._v(" article first.")]),e._v(" "),a("p",[e._v("If you have lockup issues "),a("a",{attrs:{href:"https://wiki.archlinux.org/index.php/NVIDIA_Optimus#Lockup_issue_.28lspci_hangs.29",target:"_blank",rel:"noopener noreferrer"}},[e._v("read this"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("There is also an alternative to bumblebee, called "),a("a",{attrs:{href:"https://wiki.archlinux.org/index.php/Nvidia-xrun",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nvidia-xrun"),a("OutboundLink")],1),e._v("."),a("br"),e._v("\nIf you will use "),a("router-link",{attrs:{to:"./power-management.html#Power-management"}},[e._v("#TLP")]),e._v(" be aware of "),a("a",{attrs:{href:"https://wiki.archlinux.org/index.php/TLP#Bumblebee_with_NVIDIA_driver",target:"_blank",rel:"noopener noreferrer"}},[e._v("TLP with Bumblebee issue"),a("OutboundLink")],1),e._v(".")],1)]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("Install dependencies")])])]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo pacman -S mesa mesa-demos bumblebee bbswitch primus xf86-video-intel \n")])])]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("Use pacman to install appropriate driver, "),a("strong",[e._v("DO NOT download it from the official website!")]),a("br"),e._v("\nThere are different versions of appropriate drivers, you can check it with "),a("a",{attrs:{href:"https://www.nvidia.com/Download/index.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("NVIDIA driver download website"),a("OutboundLink")],1),e._v(".")])]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("Add active user to bumblebee group")])])]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("gpasswd -a your_user_name bumblebee\n")])])]),a("ul",[a("li",[a("strong",[e._v("Enable bumblebee service")])])]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo systemctl enable bumblebeed.service\n")])])]),a("ul",[a("li",[e._v("Edit "),a("code",[e._v("/etc/bumblebee/bumblebee.conf")]),e._v(" with following::")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("...\nBridge=primus #Switch from 'auto'\n...\n[driver-nvidia]\nPMMethod=bbswitch #Enable NVIDIA card after waking from suspend\n")])])]),a("ul",[a("li",[e._v("And define your card in "),a("code",[e._v("/etc/bumblebee/xorg.conf.nvidia")]),e._v(", using correct BusID according to "),a("code",[e._v("lspci")]),e._v(" output::")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('...\nBusID "PCI:1:0:0"\n...\n')])])]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("Observe that the format of "),a("code",[e._v("lspci")]),e._v(" is HEX, whilee in xorg it's decimals."),a("br"),e._v("\nSo if the output for example "),a("code",[e._v("01:00.0")]),e._v(" the "),a("code",[e._v("BusID")]),e._v(" shoud be "),a("code",[e._v("PCI:1:0:0")]),e._v(", or "),a("code",[e._v("00:02.0")]),e._v(" will be "),a("code",[e._v("PCI:0:2:0")]),e._v(".")])]),e._v(" "),a("ul",[a("li",[e._v("Test your card")])]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("optirun glxspheres64 # You can run this only in graphical environment.\n")])])]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("If you have a hang just before X loaded, try to force xorg.conf to use only intel device, you can see the example in my dotfiles.")])]),e._v(" "),a("h3",{attrs:{id:"nvidia-settings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nvidia-settings","aria-hidden":"true"}},[e._v("#")]),e._v(" Nvidia settings")]),e._v(" "),a("p",[e._v("If you want more control over the graphical interface or cli, you can install "),a("code",[e._v("nvidia-settings")]),e._v(", and run it with optirun e.g.:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("optirun nvidia-settings -c :8\n")])])]),a("h2",{attrs:{id:"laptop-specific-keybindings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#laptop-specific-keybindings","aria-hidden":"true"}},[e._v("#")]),e._v(" Laptop Specific Keybindings")]),e._v(" "),a("p",[a("a",{attrs:{id:"laptop-specific-keybindings"}}),e._v("\nYou have several options how to manage keyboard backlight, for Asus I picked the "),a("a",{attrs:{href:"https://wiki.archlinux.org/index.php/ASUS_Zenbook_Prime_UX31A#Using_asus-kbd-backlight_from_AUR",target:"_blank",rel:"noopener noreferrer"}},[e._v("asus-kbd-backlight"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("yay -S asus-kbd-backlight\nsudo systemctl enable asus-kbd-backlight.service #enable a service to allow user permissions\n")])])]),a("p",[e._v("Command examples:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("asus-kbd-backlight up\nasus-kbd-backlight down\nasus-kbd-backlight max\nasus-kbd-backlight off\nasus-kbd-backlight night\nasus-kbd-backlight 2\nasus-kbd-backlight show\n")])])]),a("p",[e._v("You can bind any commands to your xF86XK media keys now:\n"),a("code",[e._v("0")]),e._v(" here is your "),a("code",[e._v("fn")]),e._v(" button ("),a("code",[e._v("haskell.hs")]),e._v(" example):")]),e._v(" "),a("div",{staticClass:"language-haskell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-haskell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("xF86XK_KbdBrightnessUp")]),e._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("spawn")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"asus-kbd-backlight up"')]),e._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("-- F3 Keyboard backlight up")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("xF86XK_KbdBrightnessDown")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("spawn")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"asus-kbd-backlight down"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("-- F4 Keyboard backlight down")]),e._v("\n")])])]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("Keyboard backlight should work automatically with any recent kernel."),a("br"),e._v("\nDesktop environments that use UPower, like GNOME or KDE,"),a("br"),e._v("\nwork out the box and don't need any tool or script to register the keys and change the keyboard brightness.")])])])},[],!1,null,null,null);n.options.__file="laptop-specific.md";t.default=n.exports}}]);