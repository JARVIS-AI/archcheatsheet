(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{38:function(a,e,t){"use strict";t.r(e);var r=t(2),n=Object(r.a)({},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"xmonad-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xmonad-configuration","aria-hidden":"true"}},[a._v("#")]),a._v(" Xmonad configuration")]),a._v(" "),t("p",[t("a",{attrs:{id:"xmonad-configuration"}}),a._v("\nXmonad is written in "),t("a",{attrs:{href:"https://wiki.archlinux.org/index.php/Haskell",target:"_blank",rel:"noopener noreferrer"}},[a._v("Haskell"),t("OutboundLink")],1),a._v(", minimalistic and powerfull window manager with a lot of hackable features, though its configuration could be tricky if it's your first experience with functional programming language.")]),a._v(" "),t("p",[a._v("No worries, it's not that hard, you can make "),t("a",{attrs:{href:"https://wiki.archlinux.org/index.php/Xmonad#Configuration",target:"_blank",rel:"noopener noreferrer"}},[a._v("simple configuration from arch.wiki in a minutes."),t("OutboundLink")],1),a._v(" For the better understanding you may want to read "),t("a",{attrs:{href:"http://beginners-guide-to-xmonad.readthedocs.io/index.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("beginners tutorial"),t("OutboundLink")],1),a._v("."),t("br"),a._v("\nFor more detailed configuration with examples take a look at "),t("a",{attrs:{href:"https://hackage.haskell.org/package/xmonad-contrib-0.15/docs/XMonad-Doc-Extending.html#g:8",target:"_blank",rel:"noopener noreferrer"}},[a._v("XMonad.Doc.Extending"),t("OutboundLink")],1),a._v("."),t("br"),a._v("\nYou also may want to use existing "),t("a",{attrs:{href:"https://wiki.haskell.org/Xmonad/Config_archive",target:"_blank",rel:"noopener noreferrer"}},[a._v("configurations from the community"),t("OutboundLink")],1),a._v(" or mine below")]),a._v(" "),t("p",[t("img",{attrs:{src:"/images/layouts.gif",alt:"img",title:".dotfiles/.xmonad/xmonad.hs"}})]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("Start with the installation:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yay -S xmonad xmonad-contrib\n")])])]),t("p",[a._v("Xmonad has no status bar by default, so you'll need to "),t("a",{attrs:{href:"#status-bar-xmobar"}},[a._v("pick")]),a._v(" by yourself.")]),a._v(" "),t("h2",{attrs:{id:"status-bar-xmobar"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#status-bar-xmobar","aria-hidden":"true"}},[a._v("#")]),a._v(" Status bar (XMobar)")]),a._v(" "),t("p",[t("a",{attrs:{id:"status-bar-xmobar"}}),a._v("\nXMobar is a minimalistic, text based status bar."),t("br"),a._v("\nYou can find all the documentation in "),t("a",{attrs:{href:"https://archives.haskell.org/projects.haskell.org/xmobar/#system-monitor-plugins",target:"_blank",rel:"noopener noreferrer"}},[a._v("haskell.org/xmobar"),t("OutboundLink")],1),a._v(" or on the "),t("a",{attrs:{href:"https://github.com/jaor/xmobar",target:"_blank",rel:"noopener noreferrer"}},[a._v("github"),t("OutboundLink")],1),a._v(".")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yay -S xmobar\n")])])]),t("p",[a._v("Now you will need to configure it or use one of from the community or mine below\n"),t("img",{attrs:{src:"/images/xmobar.gif",alt:"img",title:".dotfiles/.config/xmobar/xmobarrc"}})]),a._v(" "),t("h2",{attrs:{id:"vim"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vim","aria-hidden":"true"}},[a._v("#")]),a._v(" Vim")]),a._v(" "),t("p",[t("a",{attrs:{id:"vim"}}),a._v("\nInstall vim latest version, if not installed.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yay -S vim\n")])])]),t("p",[a._v("To use a theme, e.g. "),t("a",{attrs:{href:"https://github.com/sickill/vim-monokai",target:"_blank",rel:"noopener noreferrer"}},[a._v("monokai"),t("OutboundLink")],1),a._v(", copy "),t("code",[a._v("theme.vim")]),a._v(" file.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mkdir ~/.vim/colors && cd ~/.vim/colors\nwget https://raw.githubusercontent.com/sickill/vim-monokai/master/colors/monokai.vim\n")])])]),t("p",[a._v("After that you need to create "),t("code",[a._v(".vimrc")]),a._v(" file and add following:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("syntax enable\ncolorscheme monokai\n")])])]),t("p",[a._v("If your terminal is transparent and you want to keep vim transparent as well, add this:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("hi! Normal ctermbg=NONE guibg=NONE\nhi! NonText ctermbg=NONE guibg=NONE\n")])])]),t("h2",{attrs:{id:"terminal-emulator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#terminal-emulator","aria-hidden":"true"}},[a._v("#")]),a._v(" Terminal emulator")]),a._v(" "),t("p",[t("a",{attrs:{id:"terminal-emulator"}}),a._v(" "),t("a",{attrs:{href:"https://wiki.archlinux.org/index.php/Termite",target:"_blank",rel:"noopener noreferrer"}},[a._v("Termite"),t("OutboundLink")],1),a._v(" to launch transparent terminal, used as a default terminal in "),t("code",[a._v("xmonad.hs")]),a._v("."),t("br"),a._v("\nI use "),t("a",{attrs:{href:"https://wiki.archlinux.org/index.php/Rxvt-unicode",target:"_blank",rel:"noopener noreferrer"}},[a._v("urxvt"),t("OutboundLink")],1),a._v(" in "),t("code",[a._v("xmonad.hs")]),a._v(" mostly to launch different applications e.g.: "),t("a",{attrs:{href:"#file-manager"}},[a._v("ranger")]),a._v(" or as a scrathpad terminal."),t("br"),a._v("\nYou can control both with a lot of useful vim keybindings.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yay -S termite rxvt-unicode terminology-git\n")])])]),t("h3",{attrs:{id:"zsh"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zsh","aria-hidden":"true"}},[a._v("#")]),a._v(" zsh")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/sorin-ionescu/prezto",target:"_blank",rel:"noopener noreferrer"}},[a._v("Prezto"),t("OutboundLink")],1),a._v(" looks much lightweight and faster solution than "),t("a",{attrs:{href:"https://github.com/robbyrussell/oh-my-zsh",target:"_blank",rel:"noopener noreferrer"}},[a._v("oh-my-zsh"),t("OutboundLink")],1),a._v("."),t("br"),a._v("\nInstall and run Zsh first:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yay -S zsh\nzsh\n")])])]),t("p",[a._v("Clone prezto repository:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('git clone --recursive https://github.com/sorin-ionescu/prezto.git "${ZDOTDIR:-$HOME}/.zprezto"\n')])])]),t("p",[a._v("Create a new Zsh configuration by copying the zsh configuration files provided:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('setopt EXTENDED_GLOB\n  for rcfile in "${ZDOTDIR:-$HOME}"/.zprezto/runcoms/^README.md(.N); do\n  ln -s "$rcfile" "${ZDOTDIR:-$HOME}/.${rcfile:t}"\ndone\n')])])]),t("p",[a._v("Set Zsh as your default shell and open new window with zsh:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("chsh -s /bin/zsh && exit\n")])])]),t("p",[a._v("Prezto provides several themes you can choose:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("prompt -l          # Check themes list\nprompt -s nicoulaj # To preview a theme\n")])])]),t("p",[a._v("Save the theme you like in "),t("code",[a._v("~/.zpreztorc")])]),a._v(" "),t("h3",{attrs:{id:"console-utilities"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#console-utilities","aria-hidden":"true"}},[a._v("#")]),a._v(" Console utilities")]),a._v(" "),t("p",[a._v("Tree is useful when you need to see a tree of folder structure in your terminal."),t("br"),a._v("\nFuck helps you auto-correct word "),t("code",[a._v('"suod" -> "sudo"')]),a._v("."),t("br"),a._v("\nTmux is a famous terminal multiplexer.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yay -S tree fuck tmux\n")])])]),t("h2",{attrs:{id:"program-launcher"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#program-launcher","aria-hidden":"true"}},[a._v("#")]),a._v(" Program Launcher")]),a._v(" "),t("p",[t("a",{attrs:{id:"program-launcher"}}),a._v(" "),t("a",{attrs:{href:"https://wiki.archlinux.org/index.php/Rofi",target:"_blank",rel:"noopener noreferrer"}},[a._v("Rofi"),t("OutboundLink")],1),a._v(" is a part of my everyday environment, and good replacement for dmenu.\nYou may want to know how to use Rofi with "),t("a",{attrs:{href:"https://github.com/DaveDavenport/rofi/tree/f41d946e337d7a3f51bf42cd9c4bf1ecc9fd826b#keybindings",target:"_blank",rel:"noopener noreferrer"}},[a._v("keybindings"),t("OutboundLink")],1),a._v("."),t("br"),a._v(" "),t("img",{attrs:{src:"/images/rofi.gif",alt:"img"}})]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('yay -S rofi\nrofi -combi-modi drun,ssh -font "hack 12" -show combi -theme solarized # -theme onemon\n')])])]),t("p",[a._v("You can bind it with "),t("code",[a._v("Xmonad.modMask")]),a._v(". I bound it near my point finger because of often usage "),t("code",[a._v("xK_d")]),a._v(" ("),t("code",[a._v("xK_h")]),a._v(" "),t("em",[a._v("on qwerty layout")]),a._v("):")]),a._v(" "),t("div",{staticClass:"language-haskell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-haskell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("modm")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("xK_d")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("spawn")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("\"rofi -combi-modi drun,ssh -theme onedark -font 'hack 12' -show combi\"")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("h3",{attrs:{id:"file-manager"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#file-manager","aria-hidden":"true"}},[a._v("#")]),a._v(" File manager")]),a._v(" "),t("p",[t("a",{attrs:{id:"file-manager"}}),a._v(" "),t("a",{attrs:{href:"https://wiki.archlinux.org/index.php/ranger",target:"_blank",rel:"noopener noreferrer"}},[a._v("Ranger"),t("OutboundLink")],1),a._v(" is my main file manager. It has vim-like keybindings, simple and powerfull."),t("br"),a._v("\nYou can find my global color config in "),t("code",[a._v(".Xresources")]),a._v(" and "),t("em",[a._v(".conf")]),a._v(" file in "),t("code",[a._v(".dotfiles/.config/ranger")]),a._v(".")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yay -S ranger-git\n")])])]),t("p",[a._v("To add "),t("a",{attrs:{href:"https://github.com/ranger/ranger/wiki/Video-Previews",target:"_blank",rel:"noopener noreferrer"}},[a._v("video preview"),t("OutboundLink")],1),a._v(" follow git wiki.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yay -S ffmpegthumbnailer\n")])])]),t("p",[t("img",{attrs:{src:"/images/ranger.gif",alt:"img"}})]),a._v(" "),t("div",{staticClass:"tip custom-block"},[t("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),t("p",[a._v("You can edit it in "),t("code",[a._v("xmonad.hs")]),a._v(" and launch through scrathpad("),t("code",[a._v("urxvt -e ranger")]),a._v(") with "),t("code",[a._v("modm")]),a._v(" + "),t("code",[a._v("r")]),a._v(" keybindings.")])]),a._v(" "),t("div",{staticClass:"tip custom-block"},[t("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),t("p",[a._v("type "),t("code",[a._v("?")]),a._v(" to see all keybindings")]),a._v(" "),t("p",[a._v("To copy the default ranger configurations launch the command:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("ranger --copy-config=all\n")])])]),t("p",[a._v("where")]),a._v(" "),t("p",[t("code",[a._v("rc.conf")]),a._v("     - startup commands and keybindings, eg you can "),t("code",[a._v("set preview_images")]),a._v(" true\n"),t("code",[a._v("commands.py")]),a._v(" - commands which are launched with :\n"),t("code",[a._v("rifle.conf")]),a._v("  - applications used when a given type of file is launched.")]),a._v(" "),t("p",[a._v("For more tips and tricks see "),t("a",{attrs:{href:"https://wiki.archlinux.org/index.php/ranger#Tips_and_tricks",target:"_blank",rel:"noopener noreferrer"}},[a._v("wiki"),t("OutboundLink")],1),a._v("."),t("br"),a._v("\nTo add video preview read "),t("a",{attrs:{href:"https://github.com/ranger/ranger/wiki/Video-Previews",target:"_blank",rel:"noopener noreferrer"}},[a._v("github wiki"),t("OutboundLink")],1),a._v(".")])]),a._v(" "),t("h3",{attrs:{id:"notification-manager"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#notification-manager","aria-hidden":"true"}},[a._v("#")]),a._v(" Notification manager")]),a._v(" "),t("p",[t("a",{attrs:{id:"notification-manager"}}),a._v(" "),t("a",{attrs:{href:"https://wiki.archlinux.org/index.php/Dunst",target:"_blank",rel:"noopener noreferrer"}},[a._v("Dunst"),t("OutboundLink")],1),a._v(" is a simple and configurable notification manager."),t("br"),a._v("\nThere is no need to start or enable dunst; it is called by systemd when programs send notifications through dbus.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yay -S dunst\nnotify-send testTitle 'My Test Message'\n")])])]),t("div",{staticClass:"tip custom-block"},[t("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://wiki.archlinux.org/index.php/Systemd/User#DISPLAY_and_XAUTHORITY",target:"_blank",rel:"noopener noreferrer"}},[a._v("DISPLAY and XAUTHORITY"),t("OutboundLink")],1),a._v("\nIn case dunst not autostarted add this to your "),t("code",[a._v(".xprofile")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('if [ -d /etc/X11/xinit/xinitrc.d ] ; then\n for f in /etc/X11/xinit/xinitrc.d/?*.sh ; do\n  [ -x "$f" ] && . "$f"\n done\n unset f\nfi\n')])])])]),a._v(" "),t("h3",{attrs:{id:"wallpaper"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wallpaper","aria-hidden":"true"}},[a._v("#")]),a._v(" Wallpaper")]),a._v(" "),t("p",[t("a",{attrs:{id:"wallpaper"}}),a._v(" "),t("a",{attrs:{href:"https://wiki.archlinux.org/index.php/Feh",target:"_blank",rel:"noopener noreferrer"}},[a._v("feh"),t("OutboundLink")],1),a._v(" is a simple bg solution.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yay -S feh\nfeh --bg-scale /path/to/image.file\n")])])]),t("p",[a._v("After this "),t("code",[a._v(".fehbg")]),a._v(" will be created. So you can modify it however you want. As an example how to make random backgrounds:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("feh --randomize --bg-fill ~/.wallpaper/*\n")])])]),t("div",{staticClass:"warning custom-block"},[t("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),t("p",[a._v("Instead of "),t("code",[a._v(".xinitrc")]),a._v(" you can launch it in "),t("code",[a._v("~/.xmonad/xmonad.hs")]),a._v(" like this:")]),a._v(" "),t("div",{staticClass:"language-haskell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-haskell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("myStartupHook")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("X")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("myStartupHook")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("spawn")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"$HOME/.fehbg"')]),a._v("\n")])])])]),a._v(" "),t("h3",{attrs:{id:"policykit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#policykit","aria-hidden":"true"}},[a._v("#")]),a._v(" PolicyKit")]),a._v(" "),t("p",[t("a",{attrs:{id:"policykit"}}),a._v(" "),t("a",{attrs:{href:"https://wiki.archlinux.org/index.php/Systemd#ACPI_power_management",target:"_blank",rel:"noopener noreferrer"}},[a._v("Polkit"),t("OutboundLink")],1),a._v(" is also necessary for power management, notifications, "),t("a",{attrs:{href:"https://wiki.archlinux.org/index.php/Networkmanager#Set_up_PolicyKit_permissions",target:"_blank",rel:"noopener noreferrer"}},[a._v("NetworkManager permissions"),t("OutboundLink")],1),a._v(", et.c. as an unprivileged user."),t("br"),a._v("\nDesktop environments already includes polkit, Xmonad don't, so you will need to install and run it. You can use any existing polkit agent.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yay -S polkit polkit-kde-agent \n")])])]),t("p",[a._v("And add following to the "),t("code",[a._v(".xinitrc")]),a._v(" or "),t("code",[a._v(".xprofile")]),a._v(" just before you execute xmonad:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("/usr/lib/polkit-kde-authentication-agent-1 &\n")])])]),t("p",[a._v("Read more about polkit at "),t("a",{attrs:{href:"https://www.freedesktop.org/software/polkit/docs/latest/polkit.8.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("freedesktop.org"),t("OutboundLink")],1),a._v(".")])])},[],!1,null,null,null);n.options.__file="xmonad-configuration.md";e.default=n.exports}}]);